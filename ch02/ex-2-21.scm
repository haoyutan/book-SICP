(define (my:map proc items)
  (if (null? items)
      '()
      (cons (proc (car items))
            (map proc (cdr items)))))

(define (square-list-v1 items)
  (if (null? items)
      '()
      (let ((x (car items)))
           (cons (* x x)
                 (square-list-v1 (cdr items))))))

(define (square-list-v2 items)
  (my:map (lambda (x) (* x x)) items))

(define (main-ex-2-21)
  (define z (list 1 2 3 4 5))
  (display z)
  (newline)
  (display (square-list-v1 z))
  (newline)
  (display (square-list-v2 z))
  (newline))
